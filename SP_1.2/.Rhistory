knitr::opts_chunk$set(echo = TRUE)
here::here()
library(dplyr)
library(tidyverse)
library(rstan)
library(rstanarm)
library(shinystan)
library(bayesplot)
library(pkgbuild)
library(boot)
library(loo)
library(MASS)
#install.packages("remotes")    #run this line and the next once to get access to the sgen solver that DFO has developed
#remotes::install_github("Pacific-salmon-assess/samSim")
library(samSim) #package that DFO created with the sgen solver to estimate sgen given stock recruit parameters
pkgbuild::has_build_tools(debug = TRUE)
rstan_options(auto_write=T)
options(mc.cores = parallel::detectCores())
nic_dat <- read.csv("Data_in//nic_dat.csv")
head(nic_dat)
nic_dat %>% ggplot(aes(x = total_spawners, y = wild_recruits))+
geom_point()+
theme_classic()
#creating the list of data to feed to Stan
dat <- list("N" = nrow(nic_dat),                  #number of years of data
"surv" = logit(nic_dat$smolt_age3_survival), #logit-transformed smolt to age 3 adult survival
"lrs" = pull(nic_dat %>% mutate(lrs = log(wild_recruits/total_spawners)) %>% dplyr::select(lrs)),  #log natural origin recruits per spawner (HO & NO)
"S" = nic_dat$total_spawners, #vector of total spawner abundance
"mlogit_surv" = mean(logit(nic_dat$smolt_age3_survival))) #mean logit-transformed survival
#running the Stan model
fit <- stan(file = "Scripts/Ricker.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "surv_est", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#fit summary
out <- summary(fit)
saveRDS(out, "Results/out.rds")
out
inv.logit(-3.658500e+00)
(logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival)) , #logit-transformed smolt to age 3 adult survival
(logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival)))
sd(logit(nic_dat$smolt_age3_survival))
(logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival))
#creating the list of data to feed to Stan
dat <- list("N" = nrow(nic_dat),                  #number of years of data
"surv" = (logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival)), #logit-transformed smolt to age 3 adult survival
"lrs" = pull(nic_dat %>% mutate(lrs = log(wild_recruits/total_spawners)) %>% dplyr::select(lrs)),  #log natural origin recruits per spawner (HO & NO)
"S" = nic_dat$total_spawners, #vector of total spawner abundance
"mlogit_surv" = 0) #mean logit-transformed survival
#running the Stan model
fit <- stan(file = "Scripts/Ricker.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "surv_est", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#fit summary
out <- summary(fit)
saveRDS(out, "Results/out.rds")
out
#mean SAS index
mlogit_surv <- 0
#mean prediction functions for Ricker with SAS index covariate
ricker <- function(x){
(out$summary[1,1] * x + out$summary[3,1] * mlogit_surv + out$summary[2,1])
}
ricker_exp <- function(x){
exp(out$summary[1,1] * x + out$summary[3,1] * mlogit_surv + out$summary[2,1]) * x
}
#drawing from the posterior distribution to show error in relationships
alpha <- as.vector(extract(fit)[2])
beta <- as.vector(extract(fit)[1])
gamma <- as.data.frame(extract(fit)[3])
post <- data.frame(alpha, beta, gamma)
set.seed(42)
poste <- sample_n(post, 1000)
#showing a sample of 1000 alternative lines within the posterior
uncertainty_ricker <- apply(as.matrix(poste), 1, function(poste) {
stat_function(fun=function(x){(poste[1] + poste[2] * x + poste[3] * mlogit_surv)}, colour="blue",
alpha = 0.02, linewidth = 0.01)
})
uncertainty_ricker_exp <- apply(as.matrix(poste), 1, function(poste) {
stat_function(fun=function(x){exp(poste[1] + poste[2] * x + poste[3] * mlogit_surv) * x}, colour="blue",
alpha = 0.02, linewidth = 0.01)
})
#S-R plot for relationship with SAS index covariate
nic_dat %>% ggplot(aes(x = total_spawners, y = log(wild_recruits/total_spawners)))+
geom_point()+
uncertainty_ricker+
geom_function(fun = ricker)+
theme_classic()
nic_dat %>% ggplot(aes(x = total_spawners, y = wild_recruits))+
geom_point()+
geom_function(fun = ricker_exp)+
geom_abline(aes(slope = 1, intercept = 0))+
uncertainty_ricker_exp+
theme_classic()
out
nic_dat %>% filter(brood_year > 1992)
nic_dat <- nic_dat %>% filter(brood_year > 1992)
nic_dat <- nic_dat %>% filter(brood_year > 1992)
#creating the list of data to feed to Stan
dat <- list("N" = nrow(nic_dat),                  #number of years of data
"surv" = (logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival)), #logit-transformed smolt to age 3 adult survival
"lrs" = pull(nic_dat %>% mutate(lrs = log(wild_recruits/total_spawners)) %>% dplyr::select(lrs)),  #log natural origin recruits per spawner (HO & NO)
"S" = nic_dat$total_spawners, #vector of total spawner abundance
"mlogit_surv" = 0) #mean logit-transformed survival
#running the Stan model
fit <- stan(file = "Scripts/Ricker.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#running the Stan model
fit <- stan(file = "Scripts/Ricker_sans1992.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#fit summary
out92 <- summary(fit)
out92
nic_dat <- nic_dat %>% filter(brood_year > 1992)
#creating the list of data to feed to Stan
dat <- list("N" = nrow(nic_dat),                  #number of years of data
"surv" = (logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival)), #logit-transformed smolt to age 3 adult survival
"lrs" = pull(nic_dat %>% mutate(lrs = log(wild_recruits/total_spawners)) %>% dplyr::select(lrs)),  #log natural origin recruits per spawner (HO & NO)
"S" = nic_dat$total_spawners, #vector of total spawner abundance
"mlogit_surv" = 0) #mean logit-transformed survival
#running the Stan model
fit <- stan(file = "Scripts/Ricker_sans1992.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#fit summary
out92 <- summary(fit)
out92
knitr::opts_chunk$set(echo = TRUE)
here::here()
library(dplyr)
library(tidyverse)
library(rstan)
library(rstanarm)
library(shinystan)
library(bayesplot)
library(pkgbuild)
library(boot)
library(loo)
library(MASS)
#install.packages("remotes")    #run this line and the next once to get access to the sgen solver that DFO has developed
#remotes::install_github("Pacific-salmon-assess/samSim")
library(samSim) #package that DFO created with the sgen solver to estimate sgen given stock recruit parameters
pkgbuild::has_build_tools(debug = TRUE)
rstan_options(auto_write=T)
options(mc.cores = parallel::detectCores())
nic_dat <- read.csv("Data_in//nic_dat.csv")
head(nic_dat)
nic_dat %>% ggplot(aes(x = total_spawners, y = wild_recruits))+
geom_point()+
theme_classic()
#creating the list of data to feed to Stan
dat <- list("N" = nrow(nic_dat),                  #number of years of data
"surv" = (logit(nic_dat$smolt_age3_survival) - mean(logit(nic_dat$smolt_age3_survival))) / sd(logit(nic_dat$smolt_age3_survival)), #logit-transformed smolt to age 3 adult survival
"lrs" = pull(nic_dat %>% mutate(lrs = log(wild_recruits/total_spawners)) %>% dplyr::select(lrs)),  #log natural origin recruits per spawner (HO & NO)
"S" = nic_dat$total_spawners, #vector of total spawner abundance
"mlogit_surv" = 0) #mean logit-transformed survival
#running the Stan model
fit <- stan(file = "Scripts/Ricker.stan", data = dat, chains=6,
iter=10000, cores=6, thin = 1,
control=list("max_treedepth"=15,"adapt_delta"=0.8),
pars=c("beta", "alpha", "gamma", "sigma", "surv_est", "nu_Y", "mu_gamma_Y", "nu_rec", "srep", "smsy_85", "smsy", "umsy"))
#fit summary
out <- summary(fit)
saveRDS(out, "Results/out.rds")
#mean SAS index
mlogit_surv <- 0
#mean prediction functions for Ricker with SAS index covariate
ricker <- function(x){
(out$summary[1,1] * x + out$summary[3,1] * mlogit_surv + out$summary[2,1])
}
ricker_exp <- function(x){
exp(out$summary[1,1] * x + out$summary[3,1] * mlogit_surv + out$summary[2,1]) * x
}
#drawing from the posterior distribution to show error in relationships
alpha <- as.vector(extract(fit)[2])
beta <- as.vector(extract(fit)[1])
gamma <- as.data.frame(extract(fit)[3])
post <- data.frame(alpha, beta, gamma)
set.seed(42)
poste <- sample_n(post, 1000)
#showing a sample of 1000 alternative lines within the posterior
uncertainty_ricker <- apply(as.matrix(poste), 1, function(poste) {
stat_function(fun=function(x){(poste[1] + poste[2] * x + poste[3] * mlogit_surv)}, colour="blue",
alpha = 0.02, linewidth = 0.01)
})
uncertainty_ricker_exp <- apply(as.matrix(poste), 1, function(poste) {
stat_function(fun=function(x){exp(poste[1] + poste[2] * x + poste[3] * mlogit_surv) * x}, colour="blue",
alpha = 0.02, linewidth = 0.01)
})
#S-R plot for relationship with SAS index covariate
nic_dat %>% ggplot(aes(x = total_spawners, y = log(wild_recruits/total_spawners)))+
geom_point()+
uncertainty_ricker+
geom_function(fun = ricker)+
theme_classic()
nic_dat %>% ggplot(aes(x = total_spawners, y = wild_recruits))+
geom_point()+
geom_function(fun = ricker_exp)+
geom_abline(aes(slope = 1, intercept = 0))+
uncertainty_ricker_exp+
theme_classic()
